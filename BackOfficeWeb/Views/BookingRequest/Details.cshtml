@model BackOfficeWeb.Models.UpdateStatusViewModel

@{
    ViewBag.Title = "Details";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>BookingRequest Details</h2>
    @if (ViewBag.ErrorMessage != null)
    {
        <h4>@ViewBag.ErrorMessage</h4>
    }
    <div class="form-horizontal">
        <div class="form-group">
            <div class="col-md-2">
                @Html.DisplayNameFor(model => model.RequestNumber)
            </div>
            <div class="col-md-10">
                @Html.DisplayFor(model => model.RequestNumber)
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-2">
                @Html.DisplayNameFor(model => model.RequestorId)
            </div>
            <div class="col-md-10">
                @Html.DisplayFor(model => model.RequestorId)
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-2">
                @Html.DisplayNameFor(model => model.RequestorFirstName)
            </div>
            <div class="col-md-10">
                @Html.DisplayFor(model => model.RequestorFirstName)
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-2">
                @Html.DisplayNameFor(model => model.RequestorLastName)
            </div>
            <div class="col-md-10">
                @Html.DisplayFor(model => model.RequestorLastName)
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-2">
                @Html.DisplayNameFor(model => model.RequestorMobilePhoneNo)
            </div>
            <div class="col-md-10">
                @Html.DisplayFor(model => model.RequestorMobilePhoneNo)
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-2">
                @Html.DisplayNameFor(model => model.RequestorDeskPhoneNo)
            </div>
            <div class="col-md-10">
                @Html.DisplayFor(model => model.RequestorDeskPhoneNo)
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-2">
                @Html.DisplayNameFor(model => model.RequestorEmail)
            </div>
            <div class="col-md-10">
                @Html.DisplayFor(model => model.RequestorEmail)
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-2">
                @Html.DisplayNameFor(model => model.PickUpAddress1)
            </div>
            <div class="col-md-10">
                @Html.DisplayFor(model => model.PickUpAddress1)
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-2">
                @Html.DisplayNameFor(model => model.PickUpAddress2)
            </div>
            <div class="col-md-10">
                @Html.DisplayFor(model => model.PickUpAddress2)
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-2">
                @Html.DisplayNameFor(model => model.PickUpAddressCity)
            </div>
            <div class="col-md-10">
                @Html.DisplayFor(model => model.PickUpAddressCity)
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-2">
                @Html.DisplayNameFor(model => model.PickUpAddressProvince)
            </div>
            <div class="col-md-10">
                @Html.DisplayFor(model => model.PickUpAddressProvince)
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-2">
                @Html.DisplayNameFor(model => model.PickUpAddressPostal)
            </div>
            <div class="col-md-10">
                @Html.DisplayFor(model => model.PickUpAddressPostal)
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-2">
                @Html.DisplayNameFor(model => model.PickUpAddressCountry)
            </div>
            <div class="col-md-10">
                @Html.DisplayFor(model => model.PickUpAddressCountry)
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-2">
                @Html.DisplayNameFor(model => model.PickUpLatitue)
            </div>
            <div class="col-md-10">
                @Html.DisplayFor(model => model.PickUpLatitue)
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-2">
                @Html.DisplayNameFor(model => model.PickUpLongitute)
            </div>
            <div class="col-md-10">
                @Html.DisplayFor(model => model.PickUpLongitute)
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-2">
                @Html.DisplayNameFor(model => model.RecipientFirstName)
            </div>
            <div class="col-md-10">
                @Html.DisplayFor(model => model.RecipientFirstName)
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-2">
                @Html.DisplayNameFor(model => model.RecipientLastName)
            </div>
            <div class="col-md-10">
                @Html.DisplayFor(model => model.RecipientLastName)
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-2">
                @Html.DisplayNameFor(model => model.RecipientMobilePhoneNo)
            </div>
            <div class="col-md-10">
                @Html.DisplayFor(model => model.RecipientMobilePhoneNo)
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-2">
                @Html.DisplayNameFor(model => model.RecipientDeskPhoneNo)
            </div>
            <div class="col-md-10">
                @Html.DisplayFor(model => model.RecipientDeskPhoneNo)
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-2">
                @Html.DisplayNameFor(model => model.RecipientEmail)
            </div>
            <div class="col-md-10">
                @Html.DisplayFor(model => model.RecipientEmail)
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-2">
                @Html.DisplayNameFor(model => model.SendToAddress1)
            </div>
            <div class="col-md-10">
                @Html.DisplayFor(model => model.SendToAddress1)
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-2">
                @Html.DisplayNameFor(model => model.SendToAddress2)
            </div>
            <div class="col-md-10">
                @Html.DisplayFor(model => model.SendToAddress2)
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-2">
                @Html.DisplayNameFor(model => model.SendToAddressCity)
            </div>
            <div class="col-md-10">
                @Html.DisplayFor(model => model.SendToAddressCity)
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-2">
                @Html.DisplayNameFor(model => model.SendToAddressProvince)
            </div>
            <div class="col-md-10">
                @Html.DisplayFor(model => model.SendToAddressProvince)
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-2">
                @Html.DisplayNameFor(model => model.SendToAddressPostal)
            </div>
            <div class="col-md-10">
                @Html.DisplayFor(model => model.SendToAddressPostal)
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-2">
                @Html.DisplayNameFor(model => model.SendToAddressCountry)
            </div>
            <div class="col-md-10">
                @Html.DisplayFor(model => model.SendToAddressCountry)
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-2">
                @Html.DisplayNameFor(model => model.SendToLatitue)
            </div>
            <div class="col-md-10">
                @Html.DisplayFor(model => model.SendToLatitue)
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-2">
                @Html.DisplayNameFor(model => model.SendToLongitute)
            </div>
            <div class="col-md-10">
                @Html.DisplayFor(model => model.SendToLongitute)
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-2">
                @Html.DisplayNameFor(model => model.Remarks)
            </div>
            <div class="col-md-10">
                @Html.DisplayFor(model => model.Remarks)
            </div>
        </div>
        @if (Model.Status == "Pending" && ViewBag.Process != null && ViewBag.Process == true)
        {
            using (Html.BeginForm("UpdateStatus", "BookingRequest"))
            {
                @Html.AntiForgeryToken()
                <div class="form-group">
                    <div class="col-md-2">
                        Request Type
                    </div>
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.Status, 
                                                new List<SelectListItem> {
                                                    new SelectListItem { Text = "Please select new status", Value = "" },
                                                    new SelectListItem { Text = "Confirmed", Value = "Confirmed" },
                                                    new SelectListItem { Text = "Enquiry", Value = "Enquiry" } }, 
                                                    new { id = "ddlStatus", htmlAttributes = new { @class = "form-control" } })
                        
                        @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group" id="divReplyMessage" style="display:none">
                    <div class="col-md-2">
                        Reply Message
                    </div>
                    <div class="col-md-10">
                        @Html.TextAreaFor(model => model.ReplyMessage, new { id = "txtReplyMessage", style="display:none" })
                        @*<textarea id="txtReplyMessage" name="txtReplyMessage" style="display:none"></textarea>*@
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        @Html.HiddenFor(model => model.RequestNumber)
                        <input type="submit" value="Save" class="btn btn-default" />
                    </div>
                </div>
            }
        }
        else
        {
            <div class="form-group">
                <div class="col-md-2">
                    @Html.DisplayNameFor(model => model.Status)
                </div>
                <div class="col-md-10">
                    @Html.DisplayFor(model => model.Status)
                </div>
            </div>
        }
        
        
    </div>

    <p>
        @Html.ActionLink("Back to Booking Requests", ViewBag.Process != null && ViewBag.Process == true ? "Index" : "CheckStatus")
    </p>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        $(function () {
            $("#ddlStatus").change(function () {
                if ($(this).val() == "Enquiry") {
                    $("#divReplyMessage,#txtReplyMessage").show();
                }
                else {
                    $("#divReplyMessage,#txtReplyMessage").hide();
                }
            });
        });
    </script>
}